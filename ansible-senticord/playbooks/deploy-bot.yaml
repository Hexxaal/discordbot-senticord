---
- name: Deploy Senticord bot & panel
  hosts: localhost
  connection: local
  become: true

  vars_files:
    - ../group_vars/all/vault.yml

  tasks:
    - name: Ensure app dir exists
      file:
        path: /opt/senticord
        state: directory
        owner: dimitri
        group: dimitri
        mode: '0755'

    - name: Clone or update Senticord repo
      git:
        repo: git@github.com:YOUR_USER/senticord.git
        dest: /opt/senticord
        version: main
        force: yes
        accept_hostkey: yes
      become_user: dimitri

    - name: Install Python deps
      pip:
        requirements: /opt/senticord/requirements.txt
        executable: pip3

    - name: Install JS deps
      npm:
        path: /opt/senticord/js
        production: yes

    - name: Write .env from Vault
      copy:
        dest: /opt/senticord/.env
        owner: dimitri
        group: dimitri
        mode: '0600'
        content: |
          DISCORD_TOKEN={{ discord_token }}
          DISCORD_CLIENT_ID={{ discord_client_id }}
          DISCORD_CLIENT_SECRET={{ discord_client_secret }}
          REDIRECT_URI={{ redirect_uri }}
          CAPTCHA_TIMEOUT_MIN=20
          CAPTCHA_MAX_ATTEMPTS=2

    - name: Build & run bot container
      block:
        - name: Drop bot Dockerfile (if you want containerized bot)
          copy:
            dest: /opt/senticord/Dockerfile
            owner: dimitri
            group: dimitri
            content: |
              FROM python:3.10-slim
              WORKDIR /app
              COPY requirements.txt .
              RUN pip install --no-cache-dir -r requirements.txt
              COPY . .
              CMD ["python3", "main.py"]

        - name: Drop docker-compose for bot
          copy:
            dest: /opt/senticord/docker-compose.yml
            owner: dimitri
            group: dimitri
            content: |
              version: '3.8'
              services:
                bot:
                  build: .
                  env_file: .env
                  restart: unless-stopped

        - name: Launch bot container
          community.docker.docker_compose:
            project_src: /opt/senticord
            detached: true
      when: false   # set to true if you choose containerized bot

    - name: Or install & run bot via systemd
      block:
        - name: Write systemd unit for Senticord
          copy:
            dest: /etc/systemd/system/senticord.service
            mode: '0644'
            content: |
              [Unit]
              Description=Senticord Discord Bot + Panel
              After=network.target

              [Service]
              Type=simple
              User=dimitri
              WorkingDirectory=/opt/senticord
              ExecStart=/usr/bin/python3 /opt/senticord/main.py
              EnvironmentFile=/opt/senticord/.env
              Restart=always

              [Install]
              WantedBy=multi-user.target

        - name: Enable & start Senticord service
          systemd:
            name: senticord
            enabled: yes
            state: restarted
      when: true
